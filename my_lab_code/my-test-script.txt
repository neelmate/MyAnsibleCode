 --- 
 tasks:
   - name: ENSURE TENANT VRF EXISTS
     aci_vrf:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       state: "present"
       validate_certs: False
       tenant: "{{ tenant }}"
       vrf: "{{ vrf }}"
       description: "VRF Created Using Ansible"
	   
	   
- name: ENSURE TENANT BRIDGE DOMAIN EXISTS
     aci_bd:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       validate_certs: False
       state: "present"
       tenant: "{{ tenant }}"
       bd: "{{ bd | default('prod_bd') }}"
       vrf: "{{ vrf }}"
       description: "BD Created Using Ansible"
	   
	   
- name: ENSURE TENANT SUBNET EXISTS
     aci_bd_subnet:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       validate_certs: False
       state: "present"
       tenant: "{{ tenant }}"
       bd: "{{ bd | default('prod_bd')}}"
       gateway: "10.1.100.1"
       mask: 24
       scope: "public"
       description: "Subnet Created Using Ansible"
	   
 - name: ENSURE TENANT FILTERS EXIST
     aci_filter:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       action: "post"
       protocol: "https"
       tenant: "{{ tenant }}"
       filter: "{{ item }}"
       descr: "Filter Created Using Ansible"
     with_items:
       - "https"
       - "sql"

   - name: ENSURE FILTERS HAVE FILTER ENTRIES
     aci_filter_entry:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       state: "present"
       validate_certs: False
       tenant: "{{ tenant }}"
       filter: "{{ item.filter }}"
       entry: "{{ item.entry }}"
       ether_type: "ip"
       ip_protocol: "tcp"
       dst_port_start: "{{ item.port }}"
       dst_port_end: "{{ item.port }}"
     with_items:
       - filter: "https"
         entry: "https"
         port: 443
       - filter: "sql"
         entry_name: "sql"
         port: 1433
	 
    - name: ENSURE TENANT CONTRACTS EXIST
      aci_contract:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        contract: "{{ item }}"
        scope: "context"
        description: "Contract Created Using Ansible"
      with_items:
        - "web"
        - "sql"

    - name: ENSURE CONTRACTS HAVE CONTRACT SUBJECTS
      aci_contract_subject:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.subject }}"
      with_items:
        - contract: "web"
          subject: "https"
        - contract: "sql"
          subject: "sql"
	  
	
! # Binding Contract Subjects and Filters
 
 - name: ENSURE CONTRACTS SUBJECTS ARE ASSOCIATED WITH FILTERS
     aci_subject_filter:
       host: "{{ inventory_hostname }}"
       username: "{{ username }}"
       password: "{{ password }}"
       state: "present"
       validate_certs: False
       tenant_name: "{{ tenant }}"
       contract: "{{ item.contract }}"
       subject: "{{ item.subject }}"
       filter: "{{ item.filter }}"
     with_items:
       - contract: "web"
         subject: "https"
         filter: "https"
       - contract: "sql"
         subject: "sql"
         filter: "sql"

	 
	   
Ansible allows you to pass variables to the playbook at the command line using the --extra-vars or -e flag. The format is --extra-vars "var1=value1 var2=value2" where var1 and var2 are variables that are used in the playbook and value1 and value2 are their desired values for this execution. For our playbook, we use "vrf=prod_vrf" and let the bd variable use the default of prod_db.

Enter the following command at the command line:

â€‹
ansible-playbook 02_aci_tenant_network_pb.yml -i inventory --extra-vars "vrf=prod_vrf"
